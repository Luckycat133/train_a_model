#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
词典生成器模块

该模块负责生成古文处理所需的各种词典资源，包括：
1. 古文常用词典 (ancient_dict.txt)
2. 古文近义词词典 (ancient_synonym_dict.txt)
3. 古文句式模板库 (classical_terms.txt)

这些词典文件存储在 dataset/dictionaries/ 目录下
"""

import os
import logging
from pathlib import Path

class DictionaryGenerator:
    """
    词典生成器类
    
    负责生成和管理古文处理所需的词典资源
    """
    
    def __init__(self, config=None):
        """
        初始化词典生成器
        
        Args:
            config: 配置字典，可选
        """
        self.logger = logging.getLogger("LingmaoMoyun.DictionaryGenerator")
        self.config = config or {}
        
        # 设置词典目录路径
        self.dict_dir = Path(self.config.get("dict_dir", 
                                           os.path.join(os.path.dirname(os.path.dirname(__file__)), 
                                                      "dataset", "dictionaries")))
        
        # 确保目录存在
        self.dict_dir.mkdir(exist_ok=True, parents=True)
        
        # 词典文件路径
        self.ancient_dict_path = self.dict_dir / "ancient_dict.txt"
        self.synonym_dict_path = self.dict_dir / "ancient_synonym_dict.txt"
        self.classical_terms_path = self.dict_dir / "classical_terms.txt"
        
        self.logger.info(f"词典生成器初始化完成，词典目录: {self.dict_dir}")
    
    def generate_all_dictionaries(self):
        """
        生成所有词典文件
        """
        self.generate_ancient_dict()
        self.generate_synonym_dict()
        self.generate_classical_terms()
        self.logger.info("所有词典文件生成完成")
    
    def generate_ancient_dict(self):
        """
        生成古文常用词典
        
        包含古文中常用的词汇及其现代汉语释义
        """
        self.logger.info(f"开始生成古文常用词典: {self.ancient_dict_path}")
        
        # 古文常用词汇及释义
        ancient_words = [
            # 虚词类
            "之:的，表示领属关系",
            "其:他/她/它的，表示领属关系",
            "乎:于，在，表示处所",
            "焉:于此，在这里",
            "矣:了，表示变化或完成",
            "哉:啊，表示感叹",
            "也:语气词，表示肯定",
            "耳:罢了，表示限制",
            "夫:那个，指示代词",
            "盖:大概，表示推测",
            "诚:如果，表示假设",
            "苟:如果，表示假设",
            "若:如果，表示假设",
            "虽:即使，表示让步",
            "且:而且，表示并列",
            "则:就，表示顺承",
            "故:所以，表示因果",
            "是以:因此，表示因果",
            "盍:为何不，表示反问",
            "曷:为何，表示疑问",
            "岂:难道，表示反问",
            "何:什么，表示疑问",
            "安:怎么，表示疑问",
            "恶:怎么，表示疑问",
            "奚:为何，表示疑问",
            "胡:为何，表示疑问",
            "孰:谁，表示疑问",
            "谁:谁，表示疑问",
            "或:有人，表示不定",
            "莫:没有人，表示否定",
            "弗:不，表示否定",
            "勿:不要，表示禁止",
            "毋:不要，表示禁止",
            "无:不要，表示禁止",
            "未:没有，表示否定",
            "非:不是，表示否定",
            "匪:不是，表示否定",
            "俾:使，表示使令",
            "使:使，表示使令",
            "令:使，表示使令",
            "遂:于是，表示顺承",
            "斯:这个，指示代词",
            "兹:这个，指示代词",
            "是:这个，指示代词",
            "此:这个，指示代词",
            "彼:那个，指示代词",
            "夫:那个，指示代词",
            "而:而且，表示并列",
            "与:和，表示并列",
            "及:和，表示并列",
            "且:并且，表示并列",
            "以:用，表示工具",
            "于:在，表示处所",
            "于:对于，表示对象",
            "为:是，表示判断",
            "为:为了，表示目的",
            "自:从，表示起点",
            "从:从，表示起点",
            "至:到，表示终点",
            "于是:因此，表示顺承",
            "虽然:即使，表示让步",
            "然而:但是，表示转折",
            "因为:因为，表示原因",
            "所以:所以，表示结果",
            "如果:如果，表示假设",
            "尚:还，表示程度",
            "犹:好像，表示比喻",
            "若:好像，表示比喻",
            "如:好像，表示比喻",
            "固:本来，表示肯定",
            "诚:确实，表示肯定",
            "盖:盖，表示推测",
            "将:将要，表示将来",
            "方:正在，表示进行",
            "已:已经，表示完成",
            "既:已经，表示完成",
            "尝:曾经，表示经历",
            "曾:曾经，表示经历",
            
            # 实词类
            "吾:我",
            "予:我",
            "余:我",
            "仆:我",
            "朕:我（帝王自称）",
            "寡人:我（诸侯自称）",
            "不佞:我（谦词）",
            "鄙人:我（谦词）",
            "愚:我（谦词）",
            "老夫:我（年长者自称）",
            "汝:你",
            "尔:你",
            "而:你",
            "子:你（尊称）",
            "足下:你（尊称）",
            "阁下:你（尊称）",
            "君:你（尊称）",
            "先生:你（尊称）",
            "贤:你（尊称）",
            "卿:你（尊称）",
            "大人:你（尊称）",
            "老兄:你（尊称）",
            "仁兄:你（尊称）",
            "贤弟:你（尊称）",
            "诸君:你们",
            "诸位:你们",
            "诸公:你们",
            "诸贤:你们",
            "彼:他/她/它",
            "伊:他/她/它",
            "其:他/她/它",
            "之:他/她/它",
            "此:这",
            "斯:这",
            "是:这",
            "兹:这",
            "夫:那",
            "彼:那",
            "某:某个",
            "孰:谁",
            "谁:谁",
            "何:什么",
            "何物:什么",
            "何事:什么事",
            "何人:什么人",
            "何处:什么地方",
            "何时:什么时候",
            "何故:什么原因",
            "何如:怎样",
            "如何:怎样",
            "奈何:怎样",
            "云何:怎样",
            "若何:怎样",
            "安:怎样",
            "焉:怎样",
            "恶:怎样",
            "胡:为什么",
            "曷:为什么",
            "盍:为什么不",
            "奚:为什么",
            "何以:为什么",
            "何不:为什么不",
            "何必:为什么必须",
            "何尝:何曾",
            "何至于:为什么会",
            "何妨:有什么妨碍",
            "何苦:为什么要",
            "何须:为什么需要",
            "何用:为什么用",
            "何为:为什么",
            "何谓:什么是",
            "所谓:所说的",
            "云云:等等",
            "云尔:罢了",
            "而已:罢了",
            "耳:罢了",
            "尔:罢了",
            "已矣:完了",
            "已乎:完了吗",
            "已夫:完了吗",
            "已哉:完了啊",
            "已焉:完了吗",
            "已耳:完了罢了",
            "已尔:完了罢了",
            "已也:完了",
            "已乎哉:完了吗",
            "已夫人:完了吗",
            "已矣乎:完了吗",
            "已矣哉:完了啊",
            "已矣夫:完了吗",
            "已矣焉:完了吗",
            "已矣耳:完了罢了",
            "已矣尔:完了罢了",
            "已矣也:完了",
            
            # 常用动词
            "曰:说",
            "云:说",
            "言:说",
            "谓:说",
            "道:说",
            "语:告诉",
            "告:告诉",
            "闻:听说",
            "听:听",
            "见:看见",
            "视:看",
            "观:看",
            "望:看",
            "睹:看见",
            "瞻:看",
            "省:看",
            "相:看",
            "顾:看",
            "盼:看",
            "瞩:看",
            "瞰:看",
            "察:看",
            "览:看",
            "临:看",
            "眄:看",
            "睨:看",
            "觑:看",
            "窥:看",
            "觇:看",
            "瞥:看",
            "瞟:看",
            "瞠:看",
            "瞪:看",
            "瞬:看",
            "瞧:看",
            "瞩:看",
            "知:知道",
            "识:知道",
            "晓:知道",
            "解:理解",
            "悟:理解",
            "思:思考",
            "想:思考",
            "念:思考",
            "虑:思考",
            "忖:思考",
            "度:思考",
            "计:思考",
            "谋:思考",
            "料:思考",
            "揣:思考",
            "测:思考",
            "忆:回忆",
            "记:记得",
            "忘:忘记",
            "怀:怀念",
            "恋:怀念",
            "眷:怀念",
            "念:怀念",
            "忧:担忧",
            "虑:担忧",
            "患:担忧",
            "惧:害怕",
            "畏:害怕",
            "惮:害怕",
            "怕:害怕",
            "骇:害怕",
            "恐:害怕",
            "惶:害怕",
            "恨:恨",
            "怨:恨",
            "憎:恨",
            "嫉:恨",
            "妒:恨",
            "爱:爱",
            "喜:喜欢",
            "悦:喜欢",
            "乐:快乐",
            "欢:快乐",
            "娱:快乐",
            "欣:高兴",
            "悲:悲伤",
            "哀:悲伤",
            "伤:悲伤",
            "痛:悲伤",
            "泣:哭",
            "哭:哭",
            "啼:哭",
            "泪:眼泪",
            "涕:眼泪",
            "笑:笑",
            "嬉:笑",
            "戏:玩",
            "游:玩",
            "玩:玩",
            "嬉:玩",
            "耍:玩",
            "行:走",
            "走:走",
            "往:去",
            "去:去",
            "来:来",
            "至:到达",
            "到:到达",
            "返:回来",
            "归:回来",
            "还:回来",
            "回:回来",
            "入:进入",
            "进:进入",
            "出:出去",
            "退:退出",
            "升:上升",
            "降:下降",
            "上:上",
            "下:下",
            "左:左",
            "右:右",
            "前:前",
            "后:后",
            "内:内",
            "外:外",
            "中:中",
            "旁:旁边",
            "侧:旁边",
            "边:旁边",
            "畔:旁边",
            "侧:旁边",
            "傍:旁边",
            "旁:旁边",
            "侧:旁边",
            "边:旁边",
            "畔:旁边",
            "侧:旁边",
            "傍:旁边",
            "居:住",
            "住:住",
            "处:住",
            "宿:住",
            "寓:住",
            "栖:住",
            "宅:住",
            "家:家",
            "室:房间",
            "堂:厅",
            "厅:厅",
            "庭:院子",
            "院:院子",
            "园:园子",
            "圃:园子",
            "囿:园子",
            "苑:园子",
            "圉:园子",
            "圊:厕所",
            "厕:厕所",
            "厨:厨房",
            "灶:厨房",
            "寝:卧室",
            "卧:卧室",
            "眠:睡觉",
            "睡:睡觉",
            "寐:睡觉",
            "卧:睡觉",
            "起:起床",
            "醒:醒来",
            "觉:醒来",
            "食:吃",
            "吃:吃",
            "啖:吃",
            "餐:吃",
            "饭:吃饭",
            "膳:吃饭",
            "饮:喝",
            "喝:喝",
            "饮:喝",
            "啜:喝",
            "呷:喝",
            "酌:喝酒",
            "醉:喝醉",
            "沐:洗",
            "浴:洗",
            "洗:洗",
            "濯:洗",
            "涤:洗",
            "澡:洗澡",
            "浴:洗澡",
            "沐:洗澡",
            "衣:衣服",
            "服:衣服",
            "裳:衣服",
            "装:衣服",
            "衫:衣服",
            "袍:衣服",
            "裤:裤子",
            "袜:袜子",
            "履:鞋子",
            "鞋:鞋子",
            "靴:靴子",
            "冠:帽子",
            "帽:帽子",
            "巾:头巾",
            "带:带子",
            "佩:佩戴",
            "戴:戴",
            "穿:穿",
            "着:穿",
            "披:披",
            "挂:挂",
            "系:系",
            "束:束",
            "缚:束",
            "绑:束",
            "拿:拿",
            "持:拿",
            "执:拿",
            "取:拿",
            "握:拿",
            "提:拿",
            "携:拿",
            "抱:抱",
            "搂:抱",
            "抓:抓",
            "捉:抓",
            "掐:抓",
            "捏:抓",
            "掐:抓",
            "捏:抓",
            "掐:抓",
            "捏:抓"
        ]
        
        # 将词汇列表写入文件
        with open(self.ancient_dict_path, "w", encoding="utf-8") as f:
            f.write("# 古文常用词典\n")
            f.write("# 格式：古文词汇:现代汉语释义\n\n")
            for word in ancient_words:
                f.write(f"{word}\n")
        
        self.logger.info(f"古文常用词典生成完成: {self.ancient_dict_path}")
    
    def generate_synonym_dict(self):
        """
        生成古文近义词词典
        
        包含古文中常用近义词组
        """
        self.logger.info(f"开始生成古文近义词词典: {self.synonym_dict_path}")
        
        # 古文近义词组
        synonym_groups = [
            # 表示"看"的近义词
            "看:见,视,观,望,睹,瞻,省,相,顾,盼,瞩,瞰,察,览,临,眄,睨,觑,窥,觇,瞥,瞟,瞠,瞪,瞬,瞧,瞩",
            # 表示"说"的近义词
            "说:曰,云,言,谓,道,语,告,述,讲,论,叙,陈,申,宣,奏,启,禀,呈,报,诉,诵,念,颂,唱,吟,咏,诵",
            # 表示"思考"的近义词
            "思考:思,想,念,虑,忖,度,计,谋,料,揣,测,忆,记,忘,怀,恋,眷,念",
            # 表示"害怕"的近义词
            "害怕:惧,畏,惮,怕,骇,恐,惶",
            # 表示"恨"的近义词
            "恨:怨,憎,嫉,妒",
            # 表示"喜欢"的近义词
            "喜欢:爱,喜,悦,乐,欢,娱,欣",
            # 表示"悲伤"的近义词
            "悲伤:悲,哀,伤,痛",
            # 表示"哭"的近义词
            "哭:泣,哭,啼",
            # 表示"笑"的近义词
            "笑:笑,嬉",
            # 表示"玩"的近义词
            "玩:戏,游,玩,嬉,耍",
            # 表示"走"的近义词
            "走:行,走",
            # 表示"去"的近义词
            "去:往,去",
            # 表示"来"的近义词
            "来:来,至,到",
            # 表示"回来"的近义词
            "回来:返,归,还,回",
            # 表示"进入"的近义词
            "进入:入,进",
            # 表示"出去"的近义词
            "出去:出,退",
            # 表示"上升"的近义词
            "上升:升,上",
            # 表示"下降"的近义词
            "下降:降,下",
            # 表示"旁边"的近义词
            "旁边:旁,侧,边,畔,侧,傍,旁,侧,边,畔,侧,傍",
            # 表示"住"的近义词
            "住:居,住,处,宿,寓,栖,宅",
            # 表示"睡觉"的近义词
            "睡觉:眠,睡,寐,卧",
            # 表示"醒来"的近义词
            "醒来:起,醒,觉",
            # 表示"吃"的近义词
            "吃:食,吃,啖,餐,饭,膳",
            # 表示"喝"的近义词
            "喝:饮,喝,饮,啜,呷,酌,醉",
            # 表示"洗"的近义词
            "洗:沐,浴,洗,濯,涤,澡,浴,沐",
            # 表示"衣服"的近义词
            "衣服:衣,服,裳,装,衫,袍",
            # 表示"拿"的近义词
            "拿:拿,持,执,取,握,提,携",
            # 表示"抱"的近义词
            "抱:抱,搂",
            # 表示"抓"的近义词
            "抓:抓,捉,掐,捏,掐,捏,掐,捏",
            # 表示"我"的近义词
            "我:吾,予,余,仆,朕,寡人,不佞,鄙人,愚,老夫",
            # 表示"你"的近义词
            "你:汝,尔,而,子,足下,阁下,君,先生,贤,卿,大人,老兄,仁兄,贤弟",
            # 表示"你们"的近义词
            "你们:诸君,诸位,诸公,诸贤",
            # 表示"他/她/它"的近义词
            "他/她/它:彼,伊,其,之",
            # 表示"这"的近义词
            "这:此,斯,是,兹",
            # 表示"那"的近义词
            "那:夫,彼",
            # 表示"什么"的近义词
            "什么:何,何物,何事,何人,何处,何时,何故,何如,如何,奈何,云何,若何,安,焉,恶",
            # 表示"为什么"的近义词
            "为什么:胡,曷,盍,奚,何以,何不,何必,何尝,何至于,何妨,何苦,何须,何用,何为,何谓",
            # 表示"罢了"的近义词
            "罢了:云云,云尔,而已,耳,尔",
            # 表示"完了"的近义词
            "完了:已矣,已乎,已夫,已哉,已焉,已耳,已尔,已也,已乎哉,已夫人,已矣乎,已矣哉,已矣夫,已矣焉,已矣耳,已矣尔,已矣也"
        ]
        
        # 将近义词组写入文件
        with open(self.synonym_dict_path, "w", encoding="utf-8") as f:
            f.write("# 古文近义词词典\n")
            f.write("# 格式：现代词:古文近义词(逗号分隔)\n\n")
            for group in synonym_groups:
                f.write(f"{group}\n")
        
        self.logger.info(f"古文近义词词典生成完成: {self.synonym_dict_path}")
    
    def generate_classical_terms(self):
        """
        生成古文句式模板库
        
        包含古文中常用的句式结构和表达模板
        """
        self.logger.info(f"开始生成古文句式模板库: {self.classical_terms_path}")
        
        # 古文句式模板
        classical_terms = [
            # 开篇常用句式
            "[开篇] 昔者, 某公居于某地, 性好某事.",
            "[开篇] 某年某月, 某地某事.",
            "[开篇] 某公者, 某地人也, 少有大志.",
            "[开篇] 某公, 字某字, 某地人也.",
            "[开篇] 某时, 天下大乱, 民不聊生.",
            "[开篇] 某公尝言曰: \"某某某.\"",
            "[开篇] 某年, 某事起于某地.",
            "[开篇] 某公闻某事, 叹曰: \"某某某.\"",
            "[开篇] 某公尝游于某地, 见某事, 喟然叹曰: \"某某某.\"",
            "[开篇] 某公尝与某人论某事, 曰: \"某某某.\"",
            
            # 记叙常用句式
            "[记叙] 某日, 某公行于某地, 见某事.",
            "[记叙] 某公闻之, 大惊, 急往某地.",
            "[记叙] 某公不得已, 遂某事.",
            "[记叙] 某公不胜某事, 乃某事.",
            "[记叙] 某公见某事, 不禁某事.",
            "[记叙] 某公与某人相遇于某地, 道及某事.",
            "[记叙] 某公尝谓某人曰: \"某某某.\"",
            "[记叙] 某公闻之, 欣然曰: \"某某某.\"",
            "[记叙] 某公闻之, 勃然大怒, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不胜悲愤, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 莞尔一笑, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 沉吟良久, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不以为然, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 颔首微笑, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁莞尔, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁慨叹, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁愕然, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁怃然, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁愀然, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁凄然, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁怆然, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁悲然, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁喜形于色, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁忧形于色, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁怒形于色, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁惊形于色, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁疑形于色, 曰: \"某某某.\"",
            "[记叙] 某公闻之, 不禁悲形于色, 曰: \"某某某.\"",
            
            # 议论常用句式
            "[议论] 君子曰: \"某某某.\"",
            "[议论] 子曰: \"某某某.\"",
            "[议论] 某公曰: \"某某某.\"",
            "[议论] 某公尝言: \"某某某.\"",
            "[议论] 某公尝谓: \"某某某.\"",
            "[议论] 某公尝叹: \"某某某.\"",
            "[议论] 某公尝喟然而叹曰: \"某某某.\"",
            "[议论] 某公尝慨然而叹曰: \"某某某.\"",
            "[议论] 某公尝欣然而叹曰: \"某某某.\"",
            "[议论] 某公尝悲然而叹曰: \"某某某.\"",
            "[议论] 某公尝怃然而叹曰: \"某某某.\"",
            "[议论] 某公尝愀然而叹曰: \"某某某.\"",
            "[议论] 某公尝凄然而叹曰: \"某某某.\"",
            "[议论] 某公尝怆然而叹曰: \"某某某.\"",
            "[议论] 某公尝愕然而叹曰: \"某某某.\"",
            "[议论] 某公尝莞尔而笑曰: \"某某某.\"",
            "[议论] 某公尝颔首微笑曰: \"某某某.\"",
            "[议论] 某公尝勃然大怒曰: \"某某某.\"",
            "[议论] 某公尝不胜悲愤曰: \"某某某.\"",
            "[议论] 某公尝沉吟良久曰: \"某某某.\"",
            "[议论] 某公尝不以为然曰: \"某某某.\"",
            
            # 抒情常用句式
            "[抒情] 某公望某景, 不禁慨然而叹.",
            "[抒情] 某公闻某事, 不禁泫然泪下.",
            "[抒情] 某公见某事, 不禁喟然长叹.",
            "[抒情] 某公忆某事, 不禁怆然而涕.",
            "[抒情] 某公思某事, 不禁愀然而泣.",
            "[抒情] 某公感某事, 不禁凄然而泪.",
            "[抒情] 某公悲某事, 不禁恸哭失声.",
            "[抒情] 某公喜某事, 不禁手舞足蹈.",
            "[抒情] 某公怒某事, 不禁切齿腐心.",
            "[抒情] 某公惧某事, 不禁战栗不已.",
            "[抒情] 某公忧某事, 不禁彻夜不寐.",
            "[抒情] 某公思某事, 不禁黯然神伤.",
            "[抒情] 某公念某事, 不禁怅然若失.",
            "[抒情] 某公忆某事, 不禁黯然泪下.",
            "[抒情] 某公感某事, 不禁慷慨激昂.",
            "[抒情] 某公闻某事, 不禁拊掌大笑.",
            "[抒情] 某公见某事, 不禁莞尔而笑.",
            "[抒情] 某公思某事, 不禁浮想联翩.",
            "[抒情] 某公忆某事, 不禁如在目前.",
            "[抒情] 某公念某事, 不禁心驰神往.",
            
            # 描写常用句式
            "[描写] 某地山川秀丽, 风景如画.",
            "[描写] 某地民风淳朴, 人杰地灵.",
            "[描写] 某地物产丰富, 民生富足.",
            "[描写] 某地气候宜人, 四季如春.",
            "[描写] 某地文风鼎盛, 人才辈出.",
            "[描写] 某地商贾云集, 市井繁华.",
            "[描写] 某地风俗淳厚, 礼仪备至.",
            "[描写] 某地山明水秀, 鸟语花香.",
            "[描写] 某地高山巍峨, 流水潺潺.",
            "[描写] 某地亭台楼阁, 雕梁画栋.",
            "[描写] 某地碧水青山, 风光旖旎.",
            "[描写] 某地烟波浩渺, 水天一色.",
            "[描写] 某地松柏成林, 草木葱茏.",
            "[描写] 某地花团锦簇, 姹紫嫣红.",
            "[描写] 某地春花烂漫, 秋月澄明.",
            "[描写] 某地夏雨霏霏, 冬雪皑皑.",
            "[描写] 某地晨光熹微, 暮霭沉沉.",
            "[描写] 某地朝霞灿烂, 晚霞绚丽.",
            "[描写] 某地星河灿烂, 明月皎洁.",
            "[描写] 某地风清月朗, 天高云淡.",
            
            # 结尾常用句式
            "[结尾] 此事至今传为美谈.",
            "[结尾] 此事至今令人称道.",
            "[结尾] 此事至今令人感慨.",
            "[结尾] 此事至今令人叹息.",
            "[结尾] 此事至今令人敬仰.",
            "[结尾] 此事至今令人钦佩.",
            "[结尾] 此事至今令人惋惜.",
            "[结尾] 此事至今令人悲痛.",
            "[结尾] 此事至今令人愤慨.",
            "[结尾] 此事至今令人警醒.",
            "[结尾] 此事至今令人深思.",
            "[结尾] 此事至今令人追忆.",
            "[结尾] 此事至今令人怀念.",
            "[结尾] 此事至今令人向往.",
            "[结尾] 此事至今令人神往.",
            "[结尾] 此事至今令人向慕.",
            "[结尾] 此事至今令人敬慕.",
            "[结尾] 此事至今令人景仰.",
            "[结尾] 此事至今令人崇敬.",
            "[结尾] 此事至今令人怀想."
        ]
        
        # 将句式模板写入文件
        with open(self.classical_terms_path, "w", encoding="utf-8") as f:
            f.write("# 古文句式模板库\n")
            f.write("# 格式：[类型] 句式模板\n\n")
            for term in classical_terms:
                f.write(f"{term}\n")
        
        self.logger.info(f"古文句式模板库生成完成: {self.classical_terms_path}")

    def __str__(self):
        """返回词典生成器的字符串表示"""
        return f"DictionaryGenerator(dict_dir={self.dict_dir})"

# 如果直接运行此脚本，则生成所有词典
if __name__ == "__main__":
    import logging
    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    generator = DictionaryGenerator()
    generator.generate_all_dictionaries()